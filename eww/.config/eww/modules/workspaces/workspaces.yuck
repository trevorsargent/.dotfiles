(deflisten workspaces :initial "[]"
"modules/workspaces/scripts/workspaces.sh")

(deflisten active_workspace "modules/workspaces/scripts/get_active_workspace.sh")

(defwidget workspace [ws]
  (label :text "â€¢" :class {ws.class})
)
(defvar show false)

(defwidget workspace_group [wsg display_name active]
  (overlay
    
    (box
      :orientation "v"
      ; :class {active_workspace?.[display_name] == wsg.name ? "active workspace" : "workspace"}
      :space-evenly false
      :class "workspace"
      :width 80
      ; (for ws in {wsg.workspaces}
        ; (workspace :ws ws)
      ; )
      
      (revealer
        :transition "slideup"
        :duration "500ms"
        :reveal {!active}
        (box :class "active" :height 20
        )
      )
    )
    ; (label :text {(wsg.id -1) % 5 +1} )
    ; (label :text {active_workspace?.[display_name] ?: "No Active Workspace"} :class "ws")
  )
)


(defwidget workspace_container [display_name]
  (box
    :orientation "h"
    :class "workspace-group"
    :space-evenly false
    ; weird hack to make sure the active workspace variable loads
    (revealer
      :transition "slideleft"
      
      (box
        (label :text {active_workspace?.[display_name] ?: "No Active Workspace"} :class "ws-label")
      )
    )
    
    (for wsg in workspaces
      ; hide workspaces on other monitors
      (revealer
        :transition "slideleft"
        :reveal "${wsg.monitor == display_name}"
        (workspace_group :wsg wsg  :display_name display_name :active {active_workspace?.[display_name] == wsg.name})
      )
    )
  )
)

; (defwindow workspaces_left
  ;   :monitor 1
  ;   :geometry (geometry
  ;   :anchor "bottom center")
  ;   :exclusive false
  ;   :namespace "eww"
  ;   (box :orientation "v"
    ;     (workspace :display_name "DP-2")
  ;   )
; )

; (defwindow workspaces_right
  ;   :monitor 0
  ;   :geometry (geometry
  ;   :anchor "bottom center")
  ;   :exclusive false
  ;   :namespace "eww"
  ;   (box :orientation "v"
    ;     (workspace :display_name "DP-1")
  ;   )
; )