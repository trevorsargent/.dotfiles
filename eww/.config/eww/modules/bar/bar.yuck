(include "modules/clock/clock.yuck")
(include "modules/music/music.yuck")
(include "modules/cpu/cpu.yuck")
(include "modules/disk/disk.yuck")
(include "modules/ram/ram.yuck")
(include "modules/usage/usage.yuck")
(include "modules/net/net.yuck")

(defwidget bar []
  (box :class "bar-widget" :orientation "v" :space-evenly false :spacing 4
    (clock)
    (music)
    ; (cpu)
    ; (box
      ;   :orientation "v"
      ;   :space-evenly false
      ;   :valign "end"
      ;   (ram)
    ; )
    ; (box
      ;   :orientation "v"
      ;   :space-evenly false
      ;   :valign "end"
      ;   (disks)
    ; )
    (box :vexpand true)
    (net)
    (usage)
    
  )
)

(
    defwindow bar
    :monitor 1 ; Can be either a number (X11 and Wayland) or an output name (X11 only).
    :geometry ; Geometry of the window.
    (
        geometry ; Geometry of the window.
        :anchor "center right" ; Values include top, center, bottom and left, center, right.
        :x "0" ; Position of the window. Values may be provided in px or %.
        :y "0" ; Will be relative to anchor.
        :height "10%" ; Values may be provided in px or %.
    )

    :exclusive "true" ; Whether the compositor should reserve space for the window.
    :focusable "false" ; This is necessary for any widgets that use the keyboard to work.
    (bar)
)